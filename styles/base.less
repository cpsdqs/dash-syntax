@import "syntax-variables";

atom-text-editor {
  background-color: @syntax-background-color;
  color: @syntax-text-color;

  .wrap-guide {
    background-color: @syntax-wrap-guide-color;
  }

  .indent-guide {
    color: @syntax-indent-guide-color;
  }

  .invisible-character {
    color: @syntax-invisible-character-color;
    opacity: 0.5;
  }

  .gutter {
    background-color: @syntax-gutter-background-color;
    color: @syntax-gutter-text-color;

    .line-number {
      &.cursor-line {
        background-color: @syntax-gutter-background-color-selected;
        color: @syntax-gutter-text-color-selected;
      }

      &.cursor-line-no-selection {
        color: @syntax-gutter-text-color-selected;
      }
    }
  }

  .gutter .line-number.folded,
  .gutter .line-number:after,
  .fold-marker:after {
    color: @light-gray;
  }

  .invisible {
    color: @syntax-text-color;
  }

  .cursor {
    color: @syntax-cursor-color;
    border-left-width: 2px;
  }

  .selection .region {
    background-color: @syntax-selection-color;
  }
}

.dash-cursor-animated atom-text-editor {
  .cursors {
    // force it to be on a separate layer to prevent glitchy anti-aliasing
    transform: translateZ(0);
  }
  .cursor {
    transition: opacity .2s cubic-bezier(.2, .3, 0, 1);
  }
}

atom-text-editor .search-results .syntax--marker .region {
  background-color: transparent;
  border: 1px solid @syntax-result-marker-color;
}

atom-text-editor .search-results .syntax--marker.current-result .region {
  border: 1px solid @syntax-result-marker-color-selected;
}

.syntax--comment {
  color: @comment;
  font-style: italic;
}

.syntax--keyword {
  color: @keyword;
  font-weight: bold;

  &.syntax--control:not(.syntax--regexp) {
    color: @control;
  }

  &.syntax--operator {
    color: @operator;

    &.syntax--assignment:not(.syntax--compound) {
      font-weight: normal;
    }
  }

  &.syntax--other.syntax--special-method {
    color: @blue;
  }

  &.syntax--other.syntax--unit {
    color: @yellow;
    font-weight: normal;
  }
}

.syntax--storage {
  color: @blue;
  font-weight: bold;

  &.syntax--function {
    color: @purple;
  }

  &.syntax--modifier {
    color: @orange;
  }

  &.syntax--annotation {
    color: @yellow;
  }

  &.syntax--generic {
    color: @indigo;
  }
}

.syntax--constant {
  color: @orange;

  &.syntax--character.syntax--escape {
    color: @yellow;
  }

  &.syntax--numeric {
    color: @orange;

    &.syntax--binary {
      color: average(@yellow, @orange);
    }
    &.syntax--octal {
      color: average(@orange, average(@yellow, @orange))
    }
    &.syntax--hexadecimal {
      color: @yellow;
    }
    &.syntax--integer {}
    &.syntax--float {
      color: darken(@orange, 10%);
    }
  }

  &.syntax--boolean, &.syntax--null {
    font-style: italic;
  }

  &.syntax--other.syntax--color {
    color: @yellow;
  }

  &.syntax--other.syntax--symbol {
    color: @green;
  }
}

.syntax--variable {
  color: @variable;

  &.syntax--meta {
    color: @text-color;
  }

  &.syntax--this {
    font-style: italic;
  }

  &.syntax--interpolation {
    color: darken(@red, 10%);
  }

  &.syntax--parameter.syntax--function {
    color: @syntax-text-color;
  }
}

.syntax--invalid.syntax--illegal {
  background-color: @red;
  color: @syntax-background-color;
}

.syntax--string {
  color: @string;

  .syntax--source.syntax--embedded {
    color: @text-color;
  }

  &.syntax--regexp {
    color: @purple;

    .syntax--punctuation.syntax--string {
      color: @red;
    }

    .syntax--source.syntax--ruby.syntax--embedded {
      color: @orange;
    }
  }

  &.syntax--other.syntax--link {
    color: @purple;
  }

  &.syntax--math {
    color: @cyan;
  }
}

.syntax--punctuation {
  &.syntax--definition {
    &.syntax--comment {
      color: @comment;
      font-style: normal;
    }

    &.syntax--variable,
    &.syntax--parameters,
    &.syntax--array {
      color: @syntax-text-color;
    }

    &.syntax--string {
      color: @teal;
    }

    &.syntax--heading,
    &.syntax--identity {
      color: @blue;
    }

    &.syntax--bold {
      color: @yellow;
      font-weight: bold;
    }

    &.syntax--italic {
      color: @purple;
      font-style: italic;
    }

    &.syntax--arguments {
      color: @indigo;
    }
    &.syntax--parameters {
      color: @purple;
    }
  }

  &.syntax--section.syntax--embedded {
    color: @teal;
  }

  &.syntax--terminator,
  &.syntax--brace,
  &.syntax--tag {
    opacity: 0.7;
  }
}

.syntax--support {
  &.syntax--class {
    color: @yellow;
  }

  &.syntax--function {
    color: @blue;

    &.syntax--any-method {
      color: @indigo;
    }
  }

  &.syntax--type {
    color: @blue;
  }
}

.syntax--entity {
  &.syntax--name.syntax--function {
    color: @indigo;
  }
  &.syntax--name.syntax--type {
    color: @yellow;
  }

  &.syntax--other.syntax--inherited-class {
    color: @yellow;
    font-style: italic;
  }
  &.syntax--name.syntax--class, &.syntax--name.syntax--type.syntax--class {
    color: @yellow;
  }

  &.syntax--name.syntax--section {
    color: @blue;
  }

  &.syntax--name.syntax--tag {
    color: @red;
  }

  &.syntax--other.syntax--attribute-name {
    color: @orange;
    font-style: italic;

    &.syntax--id {
      color: @yellow;
    }
  }
}

.syntax--meta {
  &.syntax--class {}

  &.syntax--link {
    color: @orange;
  }

  &.syntax--require {
    color: @indigo;
  }

  &.syntax--selector {
    // color: @purple;
  }

  &.syntax--separator {
    background-color: @gray;
    color: @syntax-text-color;
  }

  &.syntax--delimiter {
    &.syntax--property {
      color: @red;
      font-weight: bold;
    }
    &.syntax--method {
      color: @indigo;
      font-weight: bold;
    }
  }
}

.syntax--none {
  color: @syntax-text-color;
}

.syntax--markup {
  &.syntax--bold {
    color: @orange;
    font-weight: bold;
  }

  &.syntax--changed {
    color: @purple;
  }

  &.syntax--deleted {
    color: @red;
  }

  &.syntax--italic {
    color: @yellow;
    font-style: italic;
  }

  &.syntax--underline {
    text-decoration: underline;
  }

  &.syntax--strike {
    color: @purple;
  }

  &.syntax--heading .syntax--punctuation.syntax--definition.syntax--heading {
    color: @blue;
  }

  &.syntax--inserted {
    color: @green;
  }

  &.syntax--list {
    color: @red;
  }

  &.syntax--quote {
    color: @orange;
  }

  &.syntax--raw.syntax--inline {
    color: @green;
  }
}

.syntax--source {
  &.syntax--gfm {
    .syntax--markup {
      -webkit-font-smoothing: auto;

      &.syntax--heading {
        color: @red;

        .syntax--marker {
          font-weight: normal;
          color: darken(@red, 10%);
        }

        &.syntax--heading-1, &.syntax--heading-2 {
          text-shadow: 0 0.15ex 0 darken(@red, 30%);

          .syntax--marker {
            text-shadow: none;
          }
        }
        &.syntax--heading-1 {
          font-weight: bold;
        }
      }
      &.syntax--link {
        color: @indigo;
      }

      &.syntax--raw {
        color: @light-gray;
      }
    }
    .syntax--link {
      .syntax--entity {
        color: @blue;
      }
    }
    .syntax--quote {
      font-style: normal;
    }
  }
  .syntax--js {
    &.syntax--dom {
      font-style: italic;
    }
    &.syntax--math {}
    &.syntax--yield {
      .syntax--modifier {
        color: @white; // colored looks silly
      }
    }
    // make HTML use normal text color
    &.syntax--string.syntax--html {
      color: @syntax-text-color;
    }
  }
  .syntax--rust {
    &.syntax--type_params {
      color: @light-gray;
    }
  }
  .syntax--less {
    // make @import completely white
    &.syntax--at-rule .syntax--punctuation {
      color: inherit;
    }
  }
  .syntax--css {
    // stop making ids italic
    .syntax--id {
      font-style: normal;
    }
    // white property names
    .syntax--support.syntax--type {
      color: @white;
    }
  }
}

atom-text-editor.editor .syntax--rust {
  // override tokamak styles

  .syntax--meta.syntax--attribute {
    color: @yellow;
    font-style: italic;
  }
  .syntax--storage.syntax--modifier.syntax--lifetime,
  .syntax--entity.syntax--name.syntax--lifetime {
    color: @cyan;
  }
  .syntax--keyword.syntax--unsafe {
    color: darken(@red, 20%);
  }
}

.bracket-matcher .region {
  border-bottom: 1px solid @blue;
}

.fold-marker::after {
  color: @blue;
  font-size: inherit;
}

atom-text-editor[mini] .scroll-view {
  padding-left: 1px;
}
